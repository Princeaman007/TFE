import { Navigate, Outlet } from "react-router-dom";
import { jwtDecode } from "jwt-decode";

const ProtectedRoute = ({ allowedRoles }) => {
  const token = localStorage.getItem("token");

  if (!token) {
    console.warn("‚ö†Ô∏è Aucun token trouv√©, redirection vers /login");
    return <Navigate to="/login" replace />;
  }

  try {
    const decodedToken = jwtDecode(token);
    console.log("üîç Token d√©cod√© :", decodedToken);

    // V√©rifier si le token est expir√©
    const currentTime = Date.now() / 1000;
    if (decodedToken.exp < currentTime) {
      console.warn("‚ö†Ô∏è Token expir√©, suppression et redirection vers /login");
      localStorage.removeItem("token");
      return <Navigate to="/login" replace />;
    }

    console.log("üîç R√¥le d√©tect√© :", decodedToken.role);

    // V√©rifier si le r√¥le est autoris√©
    if (!allowedRoles.includes(decodedToken.role)) {
      console.warn("‚ö†Ô∏è Acc√®s refus√© pour le r√¥le :", decodedToken.role);
      return <Navigate to="/unauthorized" replace />;
    }

    return <Outlet />; // Affiche la page si le r√¥le est autoris√©
  } catch (error) {
    console.error("‚ùå Erreur lors du d√©codage du token :", error);
    localStorage.removeItem("token");
    return <Navigate to="/login" replace />;
  }
};

export default ProtectedRoute;
